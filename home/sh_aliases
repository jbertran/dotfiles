# Aliases available for `sudo` execution
alias sudo='sudo '

# Emacs
alias e='emacsclient -c'
alias emacsk="emacsclient -e '(save-buffers-kill-emacs)'"

# Typo prevention
alias l='ls -la --color=auto'
alias sl='ls --color=auto'
alias la='ls -a --color=auto'
alias lla='ls -la --color=auto'

# Command colors
alias ls='ls --color=auto'
alias grep='grep --color=auto'

# git
alias cdp='cd ~/git/perso'
alias cdw='cd ~/git/work'
alias gst='git status'

# docker-compose
alias dc='docker-compose'

# Useful shit
alias cat='bat --style=plain'
alias grn='grep -rn'
alias tailf='tail -f'
alias pgrep='pgrep -l'
alias dexec='docker exec -i -t'

# Unlock SSH keys
alias unlock='/usr/bin/env python ~/.config/keys/unlock.py'

# find -name

fn() {
    local name=$1;
    shift;
    find . -name $name $@
}

# One-line logs for a given number of commits away from HEAD
gl() {
    history_size=$1;
    git log  --pretty=oneline | head -n $history_size
}

# Go up a given number of directories
up() {
    local d=""
    limit=$1
    for ((i=1 ; i <= limit ; i++))
    do
	      d=$d/..
    done
    d=$(echo $d | sed 's@^/@@')
    if [ -z "$d" ]; then
	      d=..
    fi
    cd $d
}

# Nuke and recreate a virtual env - requires virtualenvwrapper
resetvirtualenv() {
    VENV=$1
    workon $VENV
    deactivate
    rmvirtualenv $VENV
    mkvirtualenv $VENV
}

# Create a directory if inexistant
# cd to it either way
mkcd() {
    mkdir -p $1 && cd $1
}

ring() {
    if [ -z $1 ]; then
       cd "/home/jbertran/git/work/ring"
    else
        version_path="/home/jbertran/git/work/versions"
        version=$1;
        cd $version_path/ring-$version
    fi
}

vault() {
    if [ -z $1 ]; then
        cd "/home/jbertran/git/work/Vault"
    fi
}

layout() {
    local default_layout="single"
    local layout=$1
    if [ -z $layout ]; then
        layout=$default_layout
    fi
    source "${XDG_CONFIG_HOME:-$HOME/.config}/screenlayout/$layout.sh"
}
